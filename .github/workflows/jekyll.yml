# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      ruby-version: ${{ steps.set-ruby.outputs.ruby-version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Ruby and gems
        id: set-ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.1' # TODO: Update later to the 3.4+
          bundler-cache: true
          cache-version: 0

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Restore Ruby cache
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ needs.setup.outputs.ruby-version }}
          bundler-cache: true
          cache-version: 0
      - name: Run linters and audits
        run: |
          bundle exec bundler-audit --update
          bundle exec brakeman -q -w2 --force
          bundle exec rubocop --parallel

  build:
    runs-on: ubuntu-latest
    needs: setup
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Restore Ruby cache
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ needs.setup.outputs.ruby-version }}
          bundler-cache: true
          cache-version: 0
      - name: Build with Jekyll
        run: bundle exec jekyll build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [lint, build]
    if: github.event_name == 'push'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
